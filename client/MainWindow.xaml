<Window x:Class="WpfApplication1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication1"
        mc:Ignorable="d"
        Deactivated="Window_Deactivated"
        Title="Client" Height="600" Width="800" ResizeMode="CanMinimize" Background="White">

    <Window.Resources>
        <DataGridTemplateColumn x:Key="dgt" Header="Icona" Width="SizeToCells">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <Image Source="{Binding Icona}" />
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FF4B4B4B" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="BackgroundWindowColor" Color="#FF2E2E2E" />
        <SolidColorBrush x:Key="LeftMenuBackgroundColor" Color="#FF3E3D3D" />

        <SolidColorBrush x:Key="TextLabelColor" Color="#FFECECEC" />


        <Style x:Key="UnfocusableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight"  Value="20" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="IsReadOnly" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="2" Padding="2" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="#FF2E2E2E" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#FF2E2E2E" />
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF2E2E2E" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF2E2E2E" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MetroButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="#EEEEEEEE"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="OpacityMask" Value="#AA888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ButtonConnettiExtension" TargetType="{x:Type Button}">

            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="#EEEEEEEE"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=textBoxIpAddress, Path=Text.IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=buttonConnetti, Path=IsMouseOver}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=textBoxIpAddress, Path=Text.IsEmpty}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=buttonConnetti, Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=buttonConnetti, Path=IsPressed}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="OpacityMask" Value="#AA888888"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="{StaticResource BackgroundWindowColor}" Margin="0,0,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <!-- Or Auto -->
            <ColumnDefinition Width="600" />
        </Grid.ColumnDefinitions>

        <!-- StackPanel per contenere gli oggetti nella colonna 0 della Grid -->
        <StackPanel Grid.Column="0" Height="571" VerticalAlignment="Top" Background="{StaticResource LeftMenuBackgroundColor}" Panel.ZIndex="-1">
            <Label x:Name="labelConnettiAlServer" Content="Connetti a un server" Margin="6,10,6,0" HorizontalAlignment="Center" 
                   Foreground="{StaticResource TextLabelColor}" FontSize="18" FontWeight="Bold" Height="auto" Width="auto" Panel.ZIndex="0"/>
            <TextBox x:Name="textBoxIpAddress" Margin="6,5,6,6" KeyDown="OnKeyDownHandler" HorizontalAlignment="Center" 
                      VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                     Height="23" Width="175" TextAlignment="Center" MaxLines="1" Panel.ZIndex="0"/>
            <Button x:Name="buttonConnetti" Content="Connetti" Style="{StaticResource ButtonConnettiExtension}" HorizontalAlignment="Center" VerticalAlignment="Top" 
                    Width="175" Height="auto" Click="buttonConnetti_Click" Foreground="#FF252525" Panel.ZIndex="0"/>

            <Separator Margin="10,20,10,0" ></Separator>

            <Label x:Name="labelServerConnessi" Content="Server connessi" HorizontalAlignment="Center" Margin="0,0,0,0" 
                   VerticalAlignment="Top" Foreground="#FFECECEC" Panel.ZIndex="0" FontSize="20" FontWeight="Bold"/>
            <ListBox x:Name="serversListBox" BorderThickness="0" Background="{StaticResource LeftMenuBackgroundColor}" 
                     SelectionChanged="serversListBox_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                     ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ListBox.Resources>
                    <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Height" Value="auto"/>
                        <Setter Property="Foreground" Value="{StaticResource TextLabelColor}"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border" Padding="7" SnapsToDevicePixels="true"  >
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </StackPanel>
        <!-- TextBlock per realizzare il watermark nella 'textBoxIpAddress" -->
        <TextBlock IsHitTestVisible="False" Text="IndirizzoIp:Porta" HorizontalAlignment="Center" Height="22" Margin="13,53,15,0" VerticalAlignment="Top" Width="172" TextAlignment="Center" Panel.ZIndex="5">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=textBoxIpAddress, Path=Text.IsEmpty}" Value="True"/>
                                <Condition Binding="{Binding ElementName=textBoxIpAddress, Path=IsKeyboardFocused}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Text" Value="Ex.: 130.192.167.73:5417"/>
                                <Setter Property="Foreground" Value="Gray"></Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <ListView x:Name="listView1" Grid.Column="1" ItemsSource="{Binding}" HorizontalAlignment="Left" Height="366" Width="540"
                  Margin="26,111,0,0" VerticalAlignment="Top" Foreground="Black" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionMode="Single">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="300" Header="Finestra">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="25" Height="25" Source="{Binding Icona}">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}"></Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock Width="auto" Text="{Binding Path='NomeFinestra'}" Margin="10,0,0,0" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!--<GridViewColumn Header="Nome applicazione" DisplayMemberBinding="{Binding Path='NomeFinestra'}" Width="250"/>-->
                    <GridViewColumn Header="Stato Finestra" DisplayMemberBinding="{Binding Path='StatoFinestra'}" Width="90"/>
                    <GridViewColumn Header="Tempo in focus (%)" DisplayMemberBinding="{Binding Path='TempoFocusPerc'}" Width="130" />
                </GridView>
            </ListView.View>
            <ListView.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding 'StatoFinestra'}" Value="Focus">
                            <Setter Property="Background" Value="LightBlue"/>
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 'Visible'}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </ListView.Resources>

        </ListView>

        <Label x:Name="labelComando" Grid.Column="1" Content="Invia comando alla finestra in focus:" HorizontalAlignment="Left" Margin="26,481,0,0" VerticalAlignment="Top" Foreground="#FFECECEC"/>
        <Button x:Name="buttonCattura" Style="{StaticResource MetroButton}" IsEnabled="False" Grid.Column="1" Content="Cattura Comando" HorizontalAlignment="Left" Margin="26,512,0,0" VerticalAlignment="Top" Width="auto" Height="auto" Click="buttonCattura_Click"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="#FF2E2E2E"/>
        <Button x:Name="buttonAnnullaCattura" Style="{StaticResource MetroButton}" Visibility="Hidden" Content="Annulla Cattura" HorizontalAlignment="Left" Margin="26,512,0,0" VerticalAlignment="Top" Width="auto" Height="auto" Click="buttonAnnullaCattura_Click" Panel.ZIndex="-1" Grid.Column="1"/>
        <TextBox x:Name="textBoxComando" Cursor="Arrow" Style="{StaticResource UnfocusableTextBox}" Padding="0" Grid.Column="1" IsTabStop="False" IsReadOnly="True" HorizontalAlignment="Left" MaxHeight="54" Margin="169,507,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="397" IsReadOnlyCaretVisible="False" VerticalContentAlignment="Center" Background="Transparent" BorderBrush="#00252525" Foreground="#FFECECEC" FontWeight="Bold" FontSize="18"/>

        <Button x:Name="buttonDisconnetti" Style="{StaticResource MetroButton}" Content="Disconnetti" Visibility="Hidden" HorizontalAlignment="Left" Margin="457,50,0,0" VerticalAlignment="Top" Width="109" Height="39" Click="buttonDisconnetti_Click" Panel.ZIndex="-1" Grid.Column="1" FontSize="14"/>
        <Button x:Name="buttonChiudiServer" Style="{StaticResource MetroButton}" Content="Chiudi server" Visibility="Hidden" HorizontalAlignment="Left" Margin="457,50,0,0" VerticalAlignment="Top" Width="109" Height="39" Click="buttonChiudiServerDisconnesso_Click" Panel.ZIndex="-1" Grid.Column="1" FontSize="14"/>
        
        <Label x:Name="indirizzoServerConnesso" Content="Nessun server connesso" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FFECECEC" Panel.ZIndex="1" FontWeight="Bold" Height="auto" Width="auto" FontSize="34" Margin="26,44,0,0"/>
        <Label x:Name="labelDisconnesso" Content="Disconnesso" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FFDE0000" Panel.ZIndex="1" Height="auto" Width="auto" FontSize="20" Margin="26,17,0,0" Background="#00000000" BorderThickness="0" Visibility="Hidden"/>

    </Grid>
</Window>
